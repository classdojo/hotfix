// Generated by CoffeeScript 1.4.0
(function() {
  var MESSAGE_DISPLAY_TIME, MIN_PAGE_REFRESH_INTERVAL, refreshPage, refreshTimeout, showMessage, sift, template;

  sift = require("sift");

  template = require("./template");

  MESSAGE_DISPLAY_TIME = 1000 * 4;

  MIN_PAGE_REFRESH_INTERVAL = 1000 * 30;

  refreshTimeout = null;

  $(document).ready(function() {
    return PUBNUB.subscribe({
      channel: "hotfix_refresh",
      callback: function(payload) {
        clearInterval(refreshTimeout);
        return refreshTimeout = setTimeout(refreshPage, Math.random() * Math.max(MIN_PAGE_REFRESH_INTERVAL, payload.interval || 0), payload);
      }
    });
  });

  /*
   refreshes the page
  */


  refreshPage = function(payload) {
    var msg, reloadPage;
    if (payload.filter) {
      if (sift(payload.filter, [window]).length === 0) {
        return;
      }
    }
    msg = showMessage(payload);
    reloadPage = function() {
      return location.reload();
    };
    if (payload.critical) {
      return setTimeout(reloadPage, MESSAGE_DISPLAY_TIME);
    } else {
      msg.find(".hotfix-refresh-button").click(reloadPage);
      return msg.find(".hotfix-ignore-button").click(function() {
        return msg.animate({
          top: "-100px"
        });
      });
    }
  };

  /*
  */


  showMessage = function(data) {
    var msg;
    msg = $(template);
    msg.css({
      top: "-100px"
    });
    msg.find(".hotfix-message").text(data.text);
    if (data.critical) {
      msg.find(".hotfix-buttons").css({
        "display": "none"
      });
    }
    $(document.body).append(msg);
    msg.animate({
      top: "0px"
    });
    return msg;
  };

}).call(this);
